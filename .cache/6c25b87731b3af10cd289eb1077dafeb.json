{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/inline-source-map/package.json","includedInParent":true,"mtime":1523925102997},{"name":"source-map","loc":{"line":2,"column":33}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\nvar SourceMapGenerator = require('source-map').SourceMapGenerator;\n\nfunction offsetMapping(mapping, offset) {\n  return { line: offset.line + mapping.line, column: offset.column + mapping.column };\n}\n\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n\n  return newlines ? newlines.length : 0;\n}\n \nfunction Generator(opts) {\n  opts = opts || {};\n  this.generator = new SourceMapGenerator({ file: opts.file || '', sourceRoot: opts.sourceRoot || '' });\n  this.sourcesContent = undefined;\n  this.opts = opts;\n}\n\n/**\n * Adds the given mappings to the generator and offsets them if offset is given \n *\n * @name addMappings\n * @function\n * @param sourceFile {String} name of the source file\n * @param mappings {Array{{Object}} each object has the form { original: { line: _, column: _ }, generated: { line: _, column: _ } }\n * @param offset {Object} offset to apply to each mapping. Has the form { line: _, column: _ }\n * @return {Object} the generator to allow chaining\n */\nGenerator.prototype.addMappings = function (sourceFile, mappings, offset) { \n  var generator = this.generator; \n\n  offset = offset || {};\n  offset.line = offset.hasOwnProperty('line') ? offset.line : 0;\n  offset.column = offset.hasOwnProperty('column') ? offset.column : 0;\n\n  mappings.forEach(function (m) {\n    // only set source if we have original position to handle edgecase (see inline-source-map tests)\n    generator.addMapping({\n        source    :  m.original ? sourceFile : undefined\n      , original  :  m.original\n      , generated :  offsetMapping(m.generated, offset)\n    });\n  });\n  return this;\n};\n\n/**\n * Generates mappings for the given source, assuming that no translation from original to generated is necessary.\n *\n * @name addGeneratedMappings\n * @function\n * @param sourceFile {String} name of the source file\n * @param source {String} source of the file\n * @param offset {Object} offset to apply to each mapping. Has the form { line: _, column: _ }\n * @return {Object} the generator to allow chaining\n */\nGenerator.prototype.addGeneratedMappings = function (sourceFile, source, offset) {\n  var mappings = []\n    , linesToGenerate = newlinesIn(source) + 1;\n\n  for (var line = 1; line <= linesToGenerate; line++) {\n    var location = { line: line, column: 0 };\n    mappings.push({ original: location, generated: location });\n  }\n\n  return this.addMappings(sourceFile, mappings, offset);\n};\n\n/**\n * Adds source content for the given source file.\n * \n * @name addSourceContent\n * @function\n * @param sourceFile {String} The source file for which a mapping is included\n * @param sourcesContent {String} The content of the source file\n * @return {Object} The generator to allow chaining\n */\nGenerator.prototype.addSourceContent = function (sourceFile, sourcesContent) {\n  this.sourcesContent = this.sourcesContent || {};\n  this.sourcesContent[sourceFile] = sourcesContent;\n  return this;\n};\n\n/**\n * @name base64Encode\n * @function\n * @return {String} bas64 encoded representation of the added mappings\n */\nGenerator.prototype.base64Encode = function () {\n  var map = this.toString();\n  return new Buffer(map).toString('base64');\n};\n\n/**\n * @name inlineMappingUrl\n * @function\n * @return {String} comment with base64 encoded representation of the added mappings. Can be inlined at the end of the generated file. \n */\nGenerator.prototype.inlineMappingUrl = function () {\n  var charset = this.opts.charset || 'utf-8';\n  return '//# sourceMappingURL=data:application/json;charset=' + charset + ';base64,' + this.base64Encode();\n};\n\nGenerator.prototype.toJSON = function () {\n  var map = this.generator.toJSON();\n  if (!this.sourcesContent) return map;\n\n  var toSourcesContent = (function (s) {\n    if (typeof this.sourcesContent[s] === 'string') {\n      return this.sourcesContent[s];\n    } else {\n      return null;\n    }\n  }).bind(this);\n  map.sourcesContent = map.sources.map(toSourcesContent);\n  return map;\n};\n\nGenerator.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n\nGenerator.prototype._mappings = function () {\n  return this.generator._mappings._array;\n};\n\nGenerator.prototype.gen = function () {\n  return this.generator;\n};\n\nmodule.exports = function (opts) { return new Generator(opts); };\nmodule.exports.Generator = Generator;\n","map":{"mappings":[{"source":"node_modules/inline-source-map/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/inline-source-map/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/inline-source-map/index.js":"'use strict';\nvar SourceMapGenerator = require('source-map').SourceMapGenerator;\n\nfunction offsetMapping(mapping, offset) {\n  return { line: offset.line + mapping.line, column: offset.column + mapping.column };\n}\n\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n\n  return newlines ? newlines.length : 0;\n}\n \nfunction Generator(opts) {\n  opts = opts || {};\n  this.generator = new SourceMapGenerator({ file: opts.file || '', sourceRoot: opts.sourceRoot || '' });\n  this.sourcesContent = undefined;\n  this.opts = opts;\n}\n\n/**\n * Adds the given mappings to the generator and offsets them if offset is given \n *\n * @name addMappings\n * @function\n * @param sourceFile {String} name of the source file\n * @param mappings {Array{{Object}} each object has the form { original: { line: _, column: _ }, generated: { line: _, column: _ } }\n * @param offset {Object} offset to apply to each mapping. Has the form { line: _, column: _ }\n * @return {Object} the generator to allow chaining\n */\nGenerator.prototype.addMappings = function (sourceFile, mappings, offset) { \n  var generator = this.generator; \n\n  offset = offset || {};\n  offset.line = offset.hasOwnProperty('line') ? offset.line : 0;\n  offset.column = offset.hasOwnProperty('column') ? offset.column : 0;\n\n  mappings.forEach(function (m) {\n    // only set source if we have original position to handle edgecase (see inline-source-map tests)\n    generator.addMapping({\n        source    :  m.original ? sourceFile : undefined\n      , original  :  m.original\n      , generated :  offsetMapping(m.generated, offset)\n    });\n  });\n  return this;\n};\n\n/**\n * Generates mappings for the given source, assuming that no translation from original to generated is necessary.\n *\n * @name addGeneratedMappings\n * @function\n * @param sourceFile {String} name of the source file\n * @param source {String} source of the file\n * @param offset {Object} offset to apply to each mapping. Has the form { line: _, column: _ }\n * @return {Object} the generator to allow chaining\n */\nGenerator.prototype.addGeneratedMappings = function (sourceFile, source, offset) {\n  var mappings = []\n    , linesToGenerate = newlinesIn(source) + 1;\n\n  for (var line = 1; line <= linesToGenerate; line++) {\n    var location = { line: line, column: 0 };\n    mappings.push({ original: location, generated: location });\n  }\n\n  return this.addMappings(sourceFile, mappings, offset);\n};\n\n/**\n * Adds source content for the given source file.\n * \n * @name addSourceContent\n * @function\n * @param sourceFile {String} The source file for which a mapping is included\n * @param sourcesContent {String} The content of the source file\n * @return {Object} The generator to allow chaining\n */\nGenerator.prototype.addSourceContent = function (sourceFile, sourcesContent) {\n  this.sourcesContent = this.sourcesContent || {};\n  this.sourcesContent[sourceFile] = sourcesContent;\n  return this;\n};\n\n/**\n * @name base64Encode\n * @function\n * @return {String} bas64 encoded representation of the added mappings\n */\nGenerator.prototype.base64Encode = function () {\n  var map = this.toString();\n  return new Buffer(map).toString('base64');\n};\n\n/**\n * @name inlineMappingUrl\n * @function\n * @return {String} comment with base64 encoded representation of the added mappings. Can be inlined at the end of the generated file. \n */\nGenerator.prototype.inlineMappingUrl = function () {\n  var charset = this.opts.charset || 'utf-8';\n  return '//# sourceMappingURL=data:application/json;charset=' + charset + ';base64,' + this.base64Encode();\n};\n\nGenerator.prototype.toJSON = function () {\n  var map = this.generator.toJSON();\n  if (!this.sourcesContent) return map;\n\n  var toSourcesContent = (function (s) {\n    if (typeof this.sourcesContent[s] === 'string') {\n      return this.sourcesContent[s];\n    } else {\n      return null;\n    }\n  }).bind(this);\n  map.sourcesContent = map.sources.map(toSourcesContent);\n  return map;\n};\n\nGenerator.prototype.toString = function () {\n  return JSON.stringify(this);\n};\n\nGenerator.prototype._mappings = function () {\n  return this.generator._mappings._array;\n};\n\nGenerator.prototype.gen = function () {\n  return this.generator;\n};\n\nmodule.exports = function (opts) { return new Generator(opts); };\nmodule.exports.Generator = Generator;\n"},"lineCount":137}},"hash":"42f26bb3e32555aef5793b66752e92ee","cacheData":{"env":{}}}