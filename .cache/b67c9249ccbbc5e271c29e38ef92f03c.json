{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/utilise/package.json","includedInParent":true,"mtime":1523925102775},{"name":"./is","loc":{"line":1,"column":17}}],"generated":{"js":"var is = require('./is')\n\nmodule.exports = merge\n\nfunction merge(to){ \n  return function(from){\n    for (x in from) \n      is.obj(from[x]) && is.obj(to[x])\n        ? merge(to[x])(from[x])\n        : (to[x] = from[x])\n    return to\n  }\n}","map":{"mappings":[{"source":"node_modules/utilise/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/utilise/merge.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"node_modules/utilise/merge.js":"var is = require('./is')\n\nmodule.exports = merge\n\nfunction merge(to){ \n  return function(from){\n    for (x in from) \n      is.obj(from[x]) && is.obj(to[x])\n        ? merge(to[x])(from[x])\n        : (to[x] = from[x])\n    return to\n  }\n}"},"lineCount":13}},"hash":"f824a328d7031046fd29207b38d96e30","cacheData":{"env":{}}}