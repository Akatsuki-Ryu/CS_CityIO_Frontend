{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523842727247},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/underscore.string/package.json","includedInParent":true,"mtime":1523842713290},{"name":"./helper/makeString","loc":{"line":1,"column":25}}],"generated":{"js":"var makeString = require('./helper/makeString');\n\n/**\n * Based on the implementation here: https://github.com/hiddentao/fast-levenshtein\n */\nmodule.exports = function levenshtein(str1, str2) {\n  'use strict';\n  str1 = makeString(str1);\n  str2 = makeString(str2);\n\n  // Short cut cases  \n  if (str1 === str2) return 0;\n  if (!str1 || !str2) return Math.max(str1.length, str2.length);\n\n  // two rows\n  var prevRow = new Array(str2.length + 1);\n\n  // initialise previous row\n  for (var i = 0; i < prevRow.length; ++i) {\n    prevRow[i] = i;\n  }\n\n  // calculate current row distance from previous row\n  for (i = 0; i < str1.length; ++i) {\n    var nextCol = i + 1;\n\n    for (var j = 0; j < str2.length; ++j) {\n      var curCol = nextCol;\n\n      // substution\n      nextCol = prevRow[j] + ( (str1.charAt(i) === str2.charAt(j)) ? 0 : 1 );\n      // insertion\n      var tmp = curCol + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n      // deletion\n      tmp = prevRow[j + 1] + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n\n      // copy current col value into previous (in preparation for next iteration)\n      prevRow[j] = curCol;\n    }\n\n    // copy last col value into previous (in preparation for next iteration)\n    prevRow[j] = nextCol;\n  }\n\n  return nextCol;\n};\n","map":{"mappings":[{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/underscore.string/levenshtein.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"node_modules/underscore.string/levenshtein.js":"var makeString = require('./helper/makeString');\n\n/**\n * Based on the implementation here: https://github.com/hiddentao/fast-levenshtein\n */\nmodule.exports = function levenshtein(str1, str2) {\n  'use strict';\n  str1 = makeString(str1);\n  str2 = makeString(str2);\n\n  // Short cut cases  \n  if (str1 === str2) return 0;\n  if (!str1 || !str2) return Math.max(str1.length, str2.length);\n\n  // two rows\n  var prevRow = new Array(str2.length + 1);\n\n  // initialise previous row\n  for (var i = 0; i < prevRow.length; ++i) {\n    prevRow[i] = i;\n  }\n\n  // calculate current row distance from previous row\n  for (i = 0; i < str1.length; ++i) {\n    var nextCol = i + 1;\n\n    for (var j = 0; j < str2.length; ++j) {\n      var curCol = nextCol;\n\n      // substution\n      nextCol = prevRow[j] + ( (str1.charAt(i) === str2.charAt(j)) ? 0 : 1 );\n      // insertion\n      var tmp = curCol + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n      // deletion\n      tmp = prevRow[j + 1] + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n\n      // copy current col value into previous (in preparation for next iteration)\n      prevRow[j] = curCol;\n    }\n\n    // copy last col value into previous (in preparation for next iteration)\n    prevRow[j] = nextCol;\n  }\n\n  return nextCol;\n};\n"},"lineCount":53}},"hash":"b0b6c06f632ab955b800a432b8cf68da","cacheData":{"env":{}}}