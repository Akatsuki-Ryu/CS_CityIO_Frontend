{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523842727247},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/popper/package.json","includedInParent":true,"mtime":1523842713179},{"name":"browser-icons","loc":{"line":43,"column":17}},{"name":"ngrok","loc":{"line":194,"column":27}},{"name":"utilise/pure","loc":{"line":204,"column":137}},{"name":"fs","loc":{"line":205,"column":22}},{"name":"child_process","loc":{"line":206,"column":20}},{"name":"cryonic","loc":{"line":207,"column":30}},{"name":"path","loc":{"line":208,"column":28}},{"name":"compression","loc":{"line":209,"column":28}},{"name":"browserify","loc":{"line":210,"column":27}},{"name":"platform","loc":{"line":211,"column":25}},{"name":"chokidar","loc":{"line":212,"column":25}},{"name":"express","loc":{"line":213,"column":24}},{"name":"rijs.resdir","loc":{"line":214,"column":23}},{"name":"serve-static","loc":{"line":215,"column":22}},{"name":"./farms","loc":{"line":216,"column":22}},{"name":"wd","loc":{"line":217,"column":19}},{"name":"rijs.npm","loc":{"line":218,"column":29}},{"name":"rijs","loc":{"line":218,"column":49}},{"name":"utilise/log","loc":{"line":220,"column":20}},{"name":"utilise/err","loc":{"line":221,"column":20}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\nvar __dirname = \"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/popper\";\nmodule.exports = function popper({ \r\n  tests = 'browserify test.js'\r\n, farm = 'browserstack'\r\n, notunnel = false\r\n, runner = 'mocha'\r\n, browsers = []\r\n, globals = ''\r\n, port = 1945\r\n, watch = '.'\r\n, opts = {}\r\n, timeout\r\n, ripple\r\n} = {}){\r\n   \r\n  // defaults\r\n  const wait = debounce(timeout = timeout || +env.POPPER_TIMEOUT || 20000)(quit)\r\n      , maxRetries = 3\r\n\r\n  ripple = (ripple || rijs)(extend({ dir, port })(opts))\r\n  resdir(ripple, dir)\r\n  browsers = browsers\r\n    .map(canonical(farm))\r\n    .filter(Boolean)\r\n\r\n  // define data resources\r\n  ripple('results', {}, { from })\r\n  ripple('totals' , {})\r\n\r\n  // watch files\r\n  if (!isCI && watch) {\r\n    log('watching', watch)\r\n\r\n    chokidar.watch(watch, {\r\n      ignored: [/^\\.(.*)[^\\/\\\\]/, /[\\/\\\\]\\./, /node_modules(.+)popper/]\r\n    , ignoreInitial: true\r\n    , usePolling: false\r\n    , depth: 5\r\n    })\r\n    .on('change', debounce(generate))\r\n  }\r\n\r\n  // icons\r\n  ripple(require('browser-icons'))\r\n\r\n  // limit dashboard resources\r\n  ripple.to = limit(ripple.to)\r\n  \r\n  // proxy errors and register agent details\r\n  ripple.server.on('connected', connected)\r\n\r\n  // serve assets\r\n  ripple.server.express\r\n    .use(compression())\r\n    .use('/utilise.min.js', send(local('utilise', 'utilise.min.js')))\r\n    .use('/utilise.js'    , send(local('utilise', 'utilise.js')))\r\n    .use('/mocha.css'     , send(local('mocha', 'mocha.css')))\r\n    .use('/mocha.js'      , send(local('mocha', 'mocha.js')))\r\n    .use('/chai.js'       , send(local('chai', 'chai.js')))\r\n    .use('/dashboard/:id' , send(local(`./client/${runner}/logs.html`)))\r\n    .use('/dashboard'     , send(local('./client/dashboard.html')))\r\n    .use('/'              , serve(local('./client')))\r\n    .use('/'              , index())\r\n\r\n  return generate()\r\n       , spawn()\r\n       , ripple\r\n\r\n  function index(){\r\n    const head = is.arr(globals) ? globals.join('\\n') : globals\r\n        , html = file(local(`./client/${runner}/index.html`))\r\n            .replace('<!-- { extra scripts } -->', head || '')\r\n\r\n    return (req, res) => res.send(html)\r\n  }\r\n\r\n  function generate() {\r\n    log('generating tests')\r\n\r\n    const bundle = write(local('./client/tests.js'))\r\n        , stream = is.fn(tests) \r\n            ? tests()\r\n            : run('sh', ['-c', tests], { stdio: 'pipe' })\r\n\r\n    if (stream.stderr) \r\n      stream.stderr.pipe(process.stderr)\r\n\r\n    ;((stream.stdout || stream)\r\n      .on('end', debounce(500)(reload))\r\n      .pipe(bundle)\r\n      .flow || noop)()\r\n  }\r\n\r\n  function from(req){\r\n    return req.data.type == 'RERUN'  ? reload(req.data.value)\r\n         : req.data.type == 'SAVE'   ? save(req.socket.platform, req.data.value)\r\n                                     : false\r\n  }\r\n\r\n  function save(platform, result) {\r\n    const { uid } = platform\r\n        , results = ripple('results')\r\n        , retries = uid in results ? results[uid].retries : 0\r\n\r\n    log('received result from', uid)\r\n    result.platform = platform\r\n    result.retries = retries\r\n    update(uid, result)(ripple('results'))\r\n    totals()\r\n    ci(result)\r\n  }\r\n\r\n  function ci(r) {\r\n    if (!isCI || r.stats.running) return\r\n\r\n    const browser = browsers\r\n      .filter(d => {\r\n        if (d._name       && d._name       !== r.platform.name)        return false\r\n        if (d._version    && d._version    !== r.platform.version)     return false\r\n        if (d._os         && d._os         !== r.platform.os.name)     return false\r\n        if (d._os_version && d._os_version !== r.platform.os.version)  return false\r\n        return true\r\n      })\r\n      .pop()\r\n\r\n    if (!browser) return log('result not in matrix'.red, r.platform.uid)\r\n\r\n    browser.passed_by = r.platform.uid\r\n    browser.passed    = !r.stats.failures\r\n    browser.passed\r\n      ? log('browser passed:', r.platform.uid.green.bold)\r\n      : err('browser failed:', r.platform.uid.red.bold)\r\n\r\n    if (!browser.passed && r.retries < maxRetries) \r\n      return log('retrying'.yellow, r.platform.uid, ++r.retries, '/', str(maxRetries).grey) \r\n           , reload(r.platform.uid)\r\n\r\n    if (farms[farm].status)\r\n      farms[farm].status(browser, r.platform)\r\n\r\n    const target   = browsers.length\r\n        , passed   = browsers.filter(by('passed')).length\r\n        , finished = browsers.filter(by('passed_by')).length\r\n\r\n    log('ci targets', str(passed).green.bold, '/', str(target).grey)\r\n    \r\n      target === passed   ? time(3000, d => process.exit(0))\r\n    : target === finished ? time(3000, d => (!env.POPPER_TIMEOUT && process.exit(1)))\r\n                          : wait()\r\n  }\r\n\r\n  function connected(socket){\r\n    socket.platform = parse(socket)\r\n    socket.type = socket.handshake.url == '/dashboard' ? 'dashboard' : 'agent'\r\n    log('connected', socket.platform.uid.green, socket.type.grey)\r\n\r\n    socket.on('global err', (message, url, linenumber) => err('Global error: ', socket.platform.uid.bold, message, url, linenumber))\r\n\r\n    if (debug) \r\n      socket.on('console', function(){ log(socket.platform.uid.bold, 'says:', '', arguments[0], to.arr(arguments[1]).map(str).join(' ')) })\r\n  }\r\n\r\n  function quit(){\r\n    log('no updates received for', timeout/1000, 'seconds. timing out..')\r\n    process.exit(1)\r\n  }\r\n\r\n  function reload(uid) { \r\n    const uids = uid ? [uid] : ripple.server.ws.sockets.map(d => d.platform.uid)\r\n    \r\n    uids\r\n      .map(uid => update(`${uid}.stats.running`, true)(ripple('results')))\r\n\r\n    const agents = ripple.server.ws.sockets\r\n      .filter(not(by('handshake.url', '/dashboard')))\r\n      .filter(by('platform.uid', is.in(uids)))\r\n      .map(emitReload)\r\n      .length \r\n\r\n    log('reloading', str(agents).cyan, 'agents', uid || '')\r\n  }\r\n\r\n  function totals() {\r\n    const res = values(ripple('results'))\r\n    return ripple('totals', { \r\n      tests: str(res.map(key('stats.tests')).filter(Boolean).pop() || '?')\r\n    , browsers: str(res.length)\r\n    , passing: str(res.map(key('stats.failures')).filter(is(0)).length || '0')\r\n    })\r\n  }\r\n\r\n  function spawn(){\r\n    ripple.server.once('listening').then(() => {\r\n      log('running on port', ripple.server.http.address().port)\r\n      !notunnel && require('ngrok').connect(ripple.server.http.address().port, (e, url) => {\r\n        log('tunnelling', url && url.magenta)\r\n        return e ? err('error setting up reverse tunnel', e.stack)\r\n                 : browsers.map(boot(farm)(url))\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\nconst { values, key, str, not, by, grep, lo, is, debounce, extend, falsy, send, file, noop, update, identity, time, includes } = require('utilise/pure')\r\n    , write = require('fs').createWriteStream\r\n    , run = require('child_process').spawn\r\n    , { stringify } = require('cryonic')\r\n    , { resolve } = require('path')\r\n    , compression = require('compression')\r\n    , browserify = require('browserify')\r\n    , platform = require('platform')\r\n    , chokidar = require('chokidar')\r\n    , express = require('express')\r\n    , resdir = require('rijs.resdir')\r\n    , serve = require('serve-static')\r\n    , farms = require('./farms')\r\n    , wd = require('wd')\r\n    , rijs = opts => require('rijs.npm')(require('rijs')(opts))\r\n\r\nconst log = require('utilise/log')('[popper]')\r\n    , err = require('utilise/err')('[popper]')\r\n    , old = grep(console, 'log', /^(?!.*\\[ri\\/)/)\r\n    , env = process.env\r\n    , dir = __dirname\r\n    , isCI  = env.CI === 'true'\r\n    , debug  = lo(env.NODE_ENV) == 'debug'\r\n\r\nconst heartbeat = vm => setInterval(d => vm.eval('', e => { if (e) console.error(e) }), 30000)\r\n\r\nconst canonical = farm => browser => is.str(browser) \r\n  ? farms[farm].browsers[browser]\r\n  : browser\r\n\r\nconst local = (module, file) => {\r\n  const base = !file ? __dirname : require.resolve(module) \r\n      , read = !file ? module : '../'+file\r\n  return resolve(base, read)\r\n}\r\n\r\nconst emitReload = socket => socket.send(stringify({ data: { exec: () => location.reload() }}))\r\n\r\nconst parse = socket => {\r\n  const ua = socket.handshake.headers['user-agent']\r\n      , p = platform.parse(ua)\r\n      , o = { \r\n          name: lo(p.name)\r\n        , version: major(p.version)\r\n        , os: { \r\n            name: lo(p.os.family.split(' ').shift())\r\n          , version: major(p.os.version, p.os.family)\r\n          }\r\n        }\r\n\r\n  if (o.os.name == 'os') o.os.name = 'osx'\r\n  if (o.name == 'chrome mobile') o.name = 'chrome'\r\n  if (o.name == 'microsoft edge') o.name = 'ie'\r\n\r\n  const uid = o.name\r\n      + '-' + o.version\r\n      + '-' + o.os.name\r\n      + '-' + o.os.version\r\n\r\n  o.uid = uid\r\n\r\n  return o\r\n}\r\n\r\nconst major = (v, f) => \r\n    v                     ? v.split('.').shift() \r\n  : includes('xp')(lo(f)) ? 'xp'\r\n                          : '?'\r\n\r\nconst limit = next => (req, socket) => {\r\n  return socket.handshake.url == '/dashboard' ? next(req, socket) : false\r\n}\r\n\r\nconst boot = farm => url => opts => {\r\n  const { _name = '?', _version = '?', _os = '?' } = opts\r\n      , { connect, parse = identity } = farms[farm]\r\n      , id = `${_name.cyan} ${_version.cyan} on ${_os}`\r\n      , vm = opts.vm = connect(wd)\r\n\r\n  if (!vm) err('failed to connect to ' + farm), process.exit(1)\r\n\r\n  log(`booting up ${id}`)\r\n  \r\n  vm.init(parse(opts), e => {\r\n    if (e) return err(e, id)\r\n    log('initialised', id)\r\n    vm.get(url, e => {\r\n      if (e) return err(e, id)\r\n      log('opened to test page', id.cyan)\r\n      heartbeat(vm)\r\n    })\r\n  })\r\n}","map":{"mappings":[{"source":"node_modules/popper/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/popper/index.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}}],"sources":{"node_modules/popper/index.js":"module.exports = function popper({ \r\n  tests = 'browserify test.js'\r\n, farm = 'browserstack'\r\n, notunnel = false\r\n, runner = 'mocha'\r\n, browsers = []\r\n, globals = ''\r\n, port = 1945\r\n, watch = '.'\r\n, opts = {}\r\n, timeout\r\n, ripple\r\n} = {}){\r\n   \r\n  // defaults\r\n  const wait = debounce(timeout = timeout || +env.POPPER_TIMEOUT || 20000)(quit)\r\n      , maxRetries = 3\r\n\r\n  ripple = (ripple || rijs)(extend({ dir, port })(opts))\r\n  resdir(ripple, dir)\r\n  browsers = browsers\r\n    .map(canonical(farm))\r\n    .filter(Boolean)\r\n\r\n  // define data resources\r\n  ripple('results', {}, { from })\r\n  ripple('totals' , {})\r\n\r\n  // watch files\r\n  if (!isCI && watch) {\r\n    log('watching', watch)\r\n\r\n    chokidar.watch(watch, {\r\n      ignored: [/^\\.(.*)[^\\/\\\\]/, /[\\/\\\\]\\./, /node_modules(.+)popper/]\r\n    , ignoreInitial: true\r\n    , usePolling: false\r\n    , depth: 5\r\n    })\r\n    .on('change', debounce(generate))\r\n  }\r\n\r\n  // icons\r\n  ripple(require('browser-icons'))\r\n\r\n  // limit dashboard resources\r\n  ripple.to = limit(ripple.to)\r\n  \r\n  // proxy errors and register agent details\r\n  ripple.server.on('connected', connected)\r\n\r\n  // serve assets\r\n  ripple.server.express\r\n    .use(compression())\r\n    .use('/utilise.min.js', send(local('utilise', 'utilise.min.js')))\r\n    .use('/utilise.js'    , send(local('utilise', 'utilise.js')))\r\n    .use('/mocha.css'     , send(local('mocha', 'mocha.css')))\r\n    .use('/mocha.js'      , send(local('mocha', 'mocha.js')))\r\n    .use('/chai.js'       , send(local('chai', 'chai.js')))\r\n    .use('/dashboard/:id' , send(local(`./client/${runner}/logs.html`)))\r\n    .use('/dashboard'     , send(local('./client/dashboard.html')))\r\n    .use('/'              , serve(local('./client')))\r\n    .use('/'              , index())\r\n\r\n  return generate()\r\n       , spawn()\r\n       , ripple\r\n\r\n  function index(){\r\n    const head = is.arr(globals) ? globals.join('\\n') : globals\r\n        , html = file(local(`./client/${runner}/index.html`))\r\n            .replace('<!-- { extra scripts } -->', head || '')\r\n\r\n    return (req, res) => res.send(html)\r\n  }\r\n\r\n  function generate() {\r\n    log('generating tests')\r\n\r\n    const bundle = write(local('./client/tests.js'))\r\n        , stream = is.fn(tests) \r\n            ? tests()\r\n            : run('sh', ['-c', tests], { stdio: 'pipe' })\r\n\r\n    if (stream.stderr) \r\n      stream.stderr.pipe(process.stderr)\r\n\r\n    ;((stream.stdout || stream)\r\n      .on('end', debounce(500)(reload))\r\n      .pipe(bundle)\r\n      .flow || noop)()\r\n  }\r\n\r\n  function from(req){\r\n    return req.data.type == 'RERUN'  ? reload(req.data.value)\r\n         : req.data.type == 'SAVE'   ? save(req.socket.platform, req.data.value)\r\n                                     : false\r\n  }\r\n\r\n  function save(platform, result) {\r\n    const { uid } = platform\r\n        , results = ripple('results')\r\n        , retries = uid in results ? results[uid].retries : 0\r\n\r\n    log('received result from', uid)\r\n    result.platform = platform\r\n    result.retries = retries\r\n    update(uid, result)(ripple('results'))\r\n    totals()\r\n    ci(result)\r\n  }\r\n\r\n  function ci(r) {\r\n    if (!isCI || r.stats.running) return\r\n\r\n    const browser = browsers\r\n      .filter(d => {\r\n        if (d._name       && d._name       !== r.platform.name)        return false\r\n        if (d._version    && d._version    !== r.platform.version)     return false\r\n        if (d._os         && d._os         !== r.platform.os.name)     return false\r\n        if (d._os_version && d._os_version !== r.platform.os.version)  return false\r\n        return true\r\n      })\r\n      .pop()\r\n\r\n    if (!browser) return log('result not in matrix'.red, r.platform.uid)\r\n\r\n    browser.passed_by = r.platform.uid\r\n    browser.passed    = !r.stats.failures\r\n    browser.passed\r\n      ? log('browser passed:', r.platform.uid.green.bold)\r\n      : err('browser failed:', r.platform.uid.red.bold)\r\n\r\n    if (!browser.passed && r.retries < maxRetries) \r\n      return log('retrying'.yellow, r.platform.uid, ++r.retries, '/', str(maxRetries).grey) \r\n           , reload(r.platform.uid)\r\n\r\n    if (farms[farm].status)\r\n      farms[farm].status(browser, r.platform)\r\n\r\n    const target   = browsers.length\r\n        , passed   = browsers.filter(by('passed')).length\r\n        , finished = browsers.filter(by('passed_by')).length\r\n\r\n    log('ci targets', str(passed).green.bold, '/', str(target).grey)\r\n    \r\n      target === passed   ? time(3000, d => process.exit(0))\r\n    : target === finished ? time(3000, d => (!env.POPPER_TIMEOUT && process.exit(1)))\r\n                          : wait()\r\n  }\r\n\r\n  function connected(socket){\r\n    socket.platform = parse(socket)\r\n    socket.type = socket.handshake.url == '/dashboard' ? 'dashboard' : 'agent'\r\n    log('connected', socket.platform.uid.green, socket.type.grey)\r\n\r\n    socket.on('global err', (message, url, linenumber) => err('Global error: ', socket.platform.uid.bold, message, url, linenumber))\r\n\r\n    if (debug) \r\n      socket.on('console', function(){ log(socket.platform.uid.bold, 'says:', '', arguments[0], to.arr(arguments[1]).map(str).join(' ')) })\r\n  }\r\n\r\n  function quit(){\r\n    log('no updates received for', timeout/1000, 'seconds. timing out..')\r\n    process.exit(1)\r\n  }\r\n\r\n  function reload(uid) { \r\n    const uids = uid ? [uid] : ripple.server.ws.sockets.map(d => d.platform.uid)\r\n    \r\n    uids\r\n      .map(uid => update(`${uid}.stats.running`, true)(ripple('results')))\r\n\r\n    const agents = ripple.server.ws.sockets\r\n      .filter(not(by('handshake.url', '/dashboard')))\r\n      .filter(by('platform.uid', is.in(uids)))\r\n      .map(emitReload)\r\n      .length \r\n\r\n    log('reloading', str(agents).cyan, 'agents', uid || '')\r\n  }\r\n\r\n  function totals() {\r\n    const res = values(ripple('results'))\r\n    return ripple('totals', { \r\n      tests: str(res.map(key('stats.tests')).filter(Boolean).pop() || '?')\r\n    , browsers: str(res.length)\r\n    , passing: str(res.map(key('stats.failures')).filter(is(0)).length || '0')\r\n    })\r\n  }\r\n\r\n  function spawn(){\r\n    ripple.server.once('listening').then(() => {\r\n      log('running on port', ripple.server.http.address().port)\r\n      !notunnel && require('ngrok').connect(ripple.server.http.address().port, (e, url) => {\r\n        log('tunnelling', url && url.magenta)\r\n        return e ? err('error setting up reverse tunnel', e.stack)\r\n                 : browsers.map(boot(farm)(url))\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\nconst { values, key, str, not, by, grep, lo, is, debounce, extend, falsy, send, file, noop, update, identity, time, includes } = require('utilise/pure')\r\n    , write = require('fs').createWriteStream\r\n    , run = require('child_process').spawn\r\n    , { stringify } = require('cryonic')\r\n    , { resolve } = require('path')\r\n    , compression = require('compression')\r\n    , browserify = require('browserify')\r\n    , platform = require('platform')\r\n    , chokidar = require('chokidar')\r\n    , express = require('express')\r\n    , resdir = require('rijs.resdir')\r\n    , serve = require('serve-static')\r\n    , farms = require('./farms')\r\n    , wd = require('wd')\r\n    , rijs = opts => require('rijs.npm')(require('rijs')(opts))\r\n\r\nconst log = require('utilise/log')('[popper]')\r\n    , err = require('utilise/err')('[popper]')\r\n    , old = grep(console, 'log', /^(?!.*\\[ri\\/)/)\r\n    , env = process.env\r\n    , dir = __dirname\r\n    , isCI  = env.CI === 'true'\r\n    , debug  = lo(env.NODE_ENV) == 'debug'\r\n\r\nconst heartbeat = vm => setInterval(d => vm.eval('', e => { if (e) console.error(e) }), 30000)\r\n\r\nconst canonical = farm => browser => is.str(browser) \r\n  ? farms[farm].browsers[browser]\r\n  : browser\r\n\r\nconst local = (module, file) => {\r\n  const base = !file ? __dirname : require.resolve(module) \r\n      , read = !file ? module : '../'+file\r\n  return resolve(base, read)\r\n}\r\n\r\nconst emitReload = socket => socket.send(stringify({ data: { exec: () => location.reload() }}))\r\n\r\nconst parse = socket => {\r\n  const ua = socket.handshake.headers['user-agent']\r\n      , p = platform.parse(ua)\r\n      , o = { \r\n          name: lo(p.name)\r\n        , version: major(p.version)\r\n        , os: { \r\n            name: lo(p.os.family.split(' ').shift())\r\n          , version: major(p.os.version, p.os.family)\r\n          }\r\n        }\r\n\r\n  if (o.os.name == 'os') o.os.name = 'osx'\r\n  if (o.name == 'chrome mobile') o.name = 'chrome'\r\n  if (o.name == 'microsoft edge') o.name = 'ie'\r\n\r\n  const uid = o.name\r\n      + '-' + o.version\r\n      + '-' + o.os.name\r\n      + '-' + o.os.version\r\n\r\n  o.uid = uid\r\n\r\n  return o\r\n}\r\n\r\nconst major = (v, f) => \r\n    v                     ? v.split('.').shift() \r\n  : includes('xp')(lo(f)) ? 'xp'\r\n                          : '?'\r\n\r\nconst limit = next => (req, socket) => {\r\n  return socket.handshake.url == '/dashboard' ? next(req, socket) : false\r\n}\r\n\r\nconst boot = farm => url => opts => {\r\n  const { _name = '?', _version = '?', _os = '?' } = opts\r\n      , { connect, parse = identity } = farms[farm]\r\n      , id = `${_name.cyan} ${_version.cyan} on ${_os}`\r\n      , vm = opts.vm = connect(wd)\r\n\r\n  if (!vm) err('failed to connect to ' + farm), process.exit(1)\r\n\r\n  log(`booting up ${id}`)\r\n  \r\n  vm.init(parse(opts), e => {\r\n    if (e) return err(e, id)\r\n    log('initialised', id)\r\n    vm.get(url, e => {\r\n      if (e) return err(e, id)\r\n      log('opened to test page', id.cyan)\r\n      heartbeat(vm)\r\n    })\r\n  })\r\n}"},"lineCount":298}},"hash":"c452f206c1bfc4fa15e544425e4a52a9","cacheData":{"env":{}}}