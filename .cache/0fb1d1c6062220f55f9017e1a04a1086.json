{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/insert-module-globals/package.json","includedInParent":true,"mtime":1523925102676},{"name":"lexical-scope","loc":{"line":1,"column":25}},{"name":"through2","loc":{"line":2,"column":22}},{"name":"xtend","loc":{"line":3,"column":20}},{"name":"path","loc":{"line":5,"column":19}},{"name":"path-is-absolute","loc":{"line":6,"column":44}},{"name":"combine-source-map","loc":{"line":9,"column":31}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar parseScope = require('lexical-scope');\nvar through = require('through2');\nvar merge = require('xtend');\n\nvar path = require('path');\nvar isAbsolute = path.isAbsolute || require('path-is-absolute');\nvar processPath = require.resolve('process/browser.js');\nvar isbufferPath = require.resolve('is-buffer')\nvar combineSourceMap = require('combine-source-map');\n\nfunction getRelativeRequirePath(fullPath, fromPath) {\n  var relpath = path.relative(path.dirname(fromPath), fullPath);\n  // If fullPath is in the same directory or a subdirectory of fromPath,\n  // relpath will result in something like \"index.js\", \"src/abc.js\".\n  // require() needs \"./\" prepended to these paths.\n  if (!/^\\./.test(relpath) && !isAbsolute(relpath)) {\n    relpath = \"./\" + relpath;\n  }\n  // On Windows: Convert path separators to what require() expects\n  if (path.sep === '\\\\') {\n    relpath = relpath.replace(/\\\\/g, '/');\n  }\n  return relpath;\n}\n\nvar defaultVars = {\n    process: function (file) {\n        var relpath = getRelativeRequirePath(processPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    global: function () {\n        return 'typeof global !== \"undefined\" ? global : '\n            + 'typeof self !== \"undefined\" ? self : '\n            + 'typeof window !== \"undefined\" ? window : {}'\n        ;\n    },\n    'Buffer.isBuffer': function (file) {\n        var relpath = getRelativeRequirePath(isbufferPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    Buffer: function () {\n        return 'require(\"buffer\").Buffer';\n    },\n    __filename: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var filename = '/' + relpath;\n        return JSON.stringify(filename);\n    },\n    __dirname: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var dir = path.dirname('/' + relpath );\n        return JSON.stringify(dir);\n    }\n};\n\nmodule.exports = function (file, opts) {\n    if (/\\.json$/i.test(file)) return through();\n    if (!opts) opts = {};\n    \n    var basedir = opts.basedir || '/';\n    var vars = merge(defaultVars, opts.vars);\n    var varNames = Object.keys(vars).filter(function(name) {\n        return typeof vars[name] === 'function';\n    });\n    \n    var quick = RegExp(varNames.map(function (name) {\n        return '\\\\b' + name + '\\\\b';\n    }).join('|'));\n    \n    var chunks = [];\n    \n    return through(write, end);\n    \n    function write (chunk, enc, next) { chunks.push(chunk); next() }\n    \n    function end () {\n        var self = this;\n        var source = Buffer.isBuffer(chunks[0])\n            ? Buffer.concat(chunks).toString('utf8')\n            : chunks.join('')\n        ;\n        source = source\n            .replace(/^\\ufeff/, '')\n            .replace(/^#![^\\n]*\\n/, '\\n');\n        \n        if (opts.always !== true && !quick.test(source)) {\n            this.push(source);\n            this.push(null);\n            return;\n        }\n        \n        try {\n            var scope = opts.always\n                ? { globals: { implicit: varNames } }\n                : parseScope('(function(){\\n' + source + '\\n})()')\n            ;\n        }\n        catch (err) {\n            var e = new SyntaxError(\n                (err.message || err) + ' while parsing ' + file\n            );\n            e.type = 'syntax';\n            e.filename = file;\n            return this.emit('error', e);\n        }\n        \n        var globals = {};\n        \n        varNames.forEach(function (name) {\n            if (!/\\./.test(name)) return;\n            var parts = name.split('.')\n            var prop = (scope.globals.implicitProperties || {})[parts[0]]\n            if (!prop || prop.length !== 1 || prop[0] !== parts[1]) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[parts[0]] = '{'\n                + JSON.stringify(parts[1]) + ':' + value + '}';\n            self.emit('global', name);\n        });\n        varNames.forEach(function (name) {\n            if (/\\./.test(name)) return;\n            if (globals[name]) return;\n            if (scope.globals.implicit.indexOf(name) < 0) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[name] = value;\n            self.emit('global', name);\n        });\n        \n        this.push(closeOver(globals, source, file, opts));\n        this.push(null);\n    }\n};\n\nmodule.exports.vars = defaultVars;\n\nfunction closeOver (globals, src, file, opts) {\n    var keys = Object.keys(globals);\n    if (keys.length === 0) return src;\n    var values = keys.map(function (key) { return globals[key] });\n    \n    var wrappedSource;\n    if (keys.length <= 3) {\n        wrappedSource = '(function (' + keys.join(',') + '){\\n'\n            + src + '\\n}).call(this,' + values.join(',') + ')'\n        ;\n    }\n    else {\n      // necessary to make arguments[3..6] still work for workerify etc\n      // a,b,c,arguments[3..6],d,e,f...\n      var extra = [ '__argument0', '__argument1', '__argument2', '__argument3' ];\n      var names = keys.slice(0,3).concat(extra).concat(keys.slice(3));\n      values.splice(3, 0,\n          'arguments[3]','arguments[4]',\n          'arguments[5]','arguments[6]'\n      );\n      wrappedSource = '(function (' + names.join(',') + '){\\n'\n        + src + '\\n}).call(this,' + values.join(',') + ')';\n    }\n\n    // Generate source maps if wanted. Including the right offset for\n    // the wrapped source.\n    if (!opts.debug) {\n        return wrappedSource;\n    }\n    var sourceFile = path.relative(opts.basedir, file)\n        .replace(/\\\\/g, '/');\n    var sourceMap = combineSourceMap.create().addFile(\n        { sourceFile: sourceFile, source: src},\n        { line: 1 });\n    return combineSourceMap.removeComments(wrappedSource) + \"\\n\"\n        + sourceMap.comment();\n}\n","map":{"mappings":[{"source":"node_modules/insert-module-globals/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/insert-module-globals/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}}],"sources":{"node_modules/insert-module-globals/index.js":"var parseScope = require('lexical-scope');\nvar through = require('through2');\nvar merge = require('xtend');\n\nvar path = require('path');\nvar isAbsolute = path.isAbsolute || require('path-is-absolute');\nvar processPath = require.resolve('process/browser.js');\nvar isbufferPath = require.resolve('is-buffer')\nvar combineSourceMap = require('combine-source-map');\n\nfunction getRelativeRequirePath(fullPath, fromPath) {\n  var relpath = path.relative(path.dirname(fromPath), fullPath);\n  // If fullPath is in the same directory or a subdirectory of fromPath,\n  // relpath will result in something like \"index.js\", \"src/abc.js\".\n  // require() needs \"./\" prepended to these paths.\n  if (!/^\\./.test(relpath) && !isAbsolute(relpath)) {\n    relpath = \"./\" + relpath;\n  }\n  // On Windows: Convert path separators to what require() expects\n  if (path.sep === '\\\\') {\n    relpath = relpath.replace(/\\\\/g, '/');\n  }\n  return relpath;\n}\n\nvar defaultVars = {\n    process: function (file) {\n        var relpath = getRelativeRequirePath(processPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    global: function () {\n        return 'typeof global !== \"undefined\" ? global : '\n            + 'typeof self !== \"undefined\" ? self : '\n            + 'typeof window !== \"undefined\" ? window : {}'\n        ;\n    },\n    'Buffer.isBuffer': function (file) {\n        var relpath = getRelativeRequirePath(isbufferPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    Buffer: function () {\n        return 'require(\"buffer\").Buffer';\n    },\n    __filename: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var filename = '/' + relpath;\n        return JSON.stringify(filename);\n    },\n    __dirname: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var dir = path.dirname('/' + relpath );\n        return JSON.stringify(dir);\n    }\n};\n\nmodule.exports = function (file, opts) {\n    if (/\\.json$/i.test(file)) return through();\n    if (!opts) opts = {};\n    \n    var basedir = opts.basedir || '/';\n    var vars = merge(defaultVars, opts.vars);\n    var varNames = Object.keys(vars).filter(function(name) {\n        return typeof vars[name] === 'function';\n    });\n    \n    var quick = RegExp(varNames.map(function (name) {\n        return '\\\\b' + name + '\\\\b';\n    }).join('|'));\n    \n    var chunks = [];\n    \n    return through(write, end);\n    \n    function write (chunk, enc, next) { chunks.push(chunk); next() }\n    \n    function end () {\n        var self = this;\n        var source = Buffer.isBuffer(chunks[0])\n            ? Buffer.concat(chunks).toString('utf8')\n            : chunks.join('')\n        ;\n        source = source\n            .replace(/^\\ufeff/, '')\n            .replace(/^#![^\\n]*\\n/, '\\n');\n        \n        if (opts.always !== true && !quick.test(source)) {\n            this.push(source);\n            this.push(null);\n            return;\n        }\n        \n        try {\n            var scope = opts.always\n                ? { globals: { implicit: varNames } }\n                : parseScope('(function(){\\n' + source + '\\n})()')\n            ;\n        }\n        catch (err) {\n            var e = new SyntaxError(\n                (err.message || err) + ' while parsing ' + file\n            );\n            e.type = 'syntax';\n            e.filename = file;\n            return this.emit('error', e);\n        }\n        \n        var globals = {};\n        \n        varNames.forEach(function (name) {\n            if (!/\\./.test(name)) return;\n            var parts = name.split('.')\n            var prop = (scope.globals.implicitProperties || {})[parts[0]]\n            if (!prop || prop.length !== 1 || prop[0] !== parts[1]) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[parts[0]] = '{'\n                + JSON.stringify(parts[1]) + ':' + value + '}';\n            self.emit('global', name);\n        });\n        varNames.forEach(function (name) {\n            if (/\\./.test(name)) return;\n            if (globals[name]) return;\n            if (scope.globals.implicit.indexOf(name) < 0) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[name] = value;\n            self.emit('global', name);\n        });\n        \n        this.push(closeOver(globals, source, file, opts));\n        this.push(null);\n    }\n};\n\nmodule.exports.vars = defaultVars;\n\nfunction closeOver (globals, src, file, opts) {\n    var keys = Object.keys(globals);\n    if (keys.length === 0) return src;\n    var values = keys.map(function (key) { return globals[key] });\n    \n    var wrappedSource;\n    if (keys.length <= 3) {\n        wrappedSource = '(function (' + keys.join(',') + '){\\n'\n            + src + '\\n}).call(this,' + values.join(',') + ')'\n        ;\n    }\n    else {\n      // necessary to make arguments[3..6] still work for workerify etc\n      // a,b,c,arguments[3..6],d,e,f...\n      var extra = [ '__argument0', '__argument1', '__argument2', '__argument3' ];\n      var names = keys.slice(0,3).concat(extra).concat(keys.slice(3));\n      values.splice(3, 0,\n          'arguments[3]','arguments[4]',\n          'arguments[5]','arguments[6]'\n      );\n      wrappedSource = '(function (' + names.join(',') + '){\\n'\n        + src + '\\n}).call(this,' + values.join(',') + ')';\n    }\n\n    // Generate source maps if wanted. Including the right offset for\n    // the wrapped source.\n    if (!opts.debug) {\n        return wrappedSource;\n    }\n    var sourceFile = path.relative(opts.basedir, file)\n        .replace(/\\\\/g, '/');\n    var sourceMap = combineSourceMap.create().addFile(\n        { sourceFile: sourceFile, source: src},\n        { line: 1 });\n    return combineSourceMap.removeComments(wrappedSource) + \"\\n\"\n        + sourceMap.comment();\n}\n"},"lineCount":183}},"hash":"3a282c762220d02bdeadb7cf12899335","cacheData":{"env":{}}}