{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/utilise/package.json","includedInParent":true,"mtime":1523925102775},{"name":"./wrap","loc":{"line":1,"column":19}},{"name":"./keys","loc":{"line":2,"column":18}},{"name":"./str","loc":{"line":3,"column":18}},{"name":"./is","loc":{"line":4,"column":17}}],"generated":{"js":"var wrap = require('./wrap')\n  , dir = require('./keys')\n  , str = require('./str')\n  , is = require('./is')\n\nmodule.exports = function key(k, v){ \n  var set = arguments.length > 1\n    , keys = is.fn(k) ? [] : str(k).split('.').filter(Boolean)\n    , root = keys.shift()\n\n  return function deep(o, i){\n    var masked = {}\n    \n    return !o ? undefined \n         : !is.num(k) && !k ? (set ? replace(o, v) : o)\n         : is.arr(k) ? (k.map(copy), masked)\n         : o[k] || !keys.length ? (set ? ((o[k] = is.fn(v) ? v(o[k], i) : v), o)\n                                       :  (is.fn(k) ? k(o) : o[k]))\n                                : (set ? (key(keys.join('.'), v)(o[root] ? o[root] : (o[root] = {})), o)\n                                       :  key(keys.join('.'))(o[root]))\n\n    function copy(k){\n      var val = key(k)(o)\n      val = is.fn(v)       ? v(val) \n          : val == undefined ? v\n                           : val\n    if (val != undefined) \n        key(k, is.fn(val) ? wrap(val) : val)(masked)\n    }\n\n    function replace(o, v) {\n      dir(o).map(function(k){ delete o[k] })\n      dir(v).map(function(k){ o[k] = v[k] })\n      return o\n    }\n  }\n}","map":{"mappings":[{"source":"node_modules/utilise/key.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/utilise/key.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/utilise/key.js":"var wrap = require('./wrap')\n  , dir = require('./keys')\n  , str = require('./str')\n  , is = require('./is')\n\nmodule.exports = function key(k, v){ \n  var set = arguments.length > 1\n    , keys = is.fn(k) ? [] : str(k).split('.').filter(Boolean)\n    , root = keys.shift()\n\n  return function deep(o, i){\n    var masked = {}\n    \n    return !o ? undefined \n         : !is.num(k) && !k ? (set ? replace(o, v) : o)\n         : is.arr(k) ? (k.map(copy), masked)\n         : o[k] || !keys.length ? (set ? ((o[k] = is.fn(v) ? v(o[k], i) : v), o)\n                                       :  (is.fn(k) ? k(o) : o[k]))\n                                : (set ? (key(keys.join('.'), v)(o[root] ? o[root] : (o[root] = {})), o)\n                                       :  key(keys.join('.'))(o[root]))\n\n    function copy(k){\n      var val = key(k)(o)\n      val = is.fn(v)       ? v(val) \n          : val == undefined ? v\n                           : val\n    if (val != undefined) \n        key(k, is.fn(val) ? wrap(val) : val)(masked)\n    }\n\n    function replace(o, v) {\n      dir(o).map(function(k){ delete o[k] })\n      dir(v).map(function(k){ o[k] = v[k] })\n      return o\n    }\n  }\n}"},"lineCount":37}},"hash":"77efebc817f10a9123494d03f7d4c67b","cacheData":{"env":{}}}