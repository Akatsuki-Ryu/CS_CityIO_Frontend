{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/combine-source-map/package.json","includedInParent":true,"mtime":1523925102997},{"name":"path","loc":{"line":3,"column":31}},{"name":"convert-source-map","loc":{"line":4,"column":31}},{"name":"lodash.memoize","loc":{"line":5,"column":31}},{"name":"inline-source-map","loc":{"line":6,"column":31}},{"name":"./lib/path-is-absolute","loc":{"line":7,"column":31}},{"name":"./lib/mappings-from-map","loc":{"line":8,"column":31}}],"generated":{"js":"'use strict';\n\nvar path            =  require('path');\nvar convert         =  require('convert-source-map');\nvar memoize         =  require('lodash.memoize');\nvar createGenerator =  require('inline-source-map');\nvar pathIsAbsolute  =  require('./lib/path-is-absolute');\nvar mappingsFromMap =  require('./lib/mappings-from-map');\n\nvar protocolRx = /^[a-z]+:\\/\\//;\n\n/**\n * Rebases a relative path in 'sourceFile' to be relative\n * to the path where 'sourceFile' is located.\n *\n * This is necessary before adding relative paths to the\n * new combined map to ensure all paths are relative to their\n * original source.\n *\n * The 'sourceRoot' from the original source map is joined\n * as well to ensure the complete path.\n *\n * Resulting paths that are absolute are passed along directly.\n *\n * @param sourceFile {String} path to the original source file that references a map\n * @param relativeRoot {String} sourceRoot in sourceFile's map to combine with relativePath\n * @param relativePath {String} source path from sourceFile's map\n */\nvar rebaseRelativePath = memoize(function(sourceFile, relativeRoot, relativePath) {\n  if (!relativePath) {\n    return relativePath;\n  }\n\n  // join relative path to root (e.g. 'src/' + 'file.js')\n  var relativeRootedPath = relativeRoot ? path.join(relativeRoot, relativePath) : relativePath;\n  relativeRootedPath = relativeRootedPath.replace(/\\\\/g, '/');\n  sourceFile = sourceFile.replace(/\\\\/g, '/');\n\n  if (sourceFile === relativeRootedPath ||    // same path,\n      pathIsAbsolute(relativeRootedPath) ||   // absolute path, nor\n      protocolRx.test(relativeRootedPath)) {  // absolute protocol need rebasing\n    return relativeRootedPath;\n  }\n\n  // make relative to source file\n  return path.join(path.dirname(sourceFile), relativeRootedPath).replace(/\\\\/g, '/');\n}, function(a, b, c) {\n  return a + '::' + b + '::' + c;\n});\n\nfunction resolveMap(source) {\n  var gen = convert.fromSource(source);\n  return gen ? gen.toObject() : null;\n}\n\nfunction hasInlinedSource(existingMap) {\n  return existingMap.sourcesContent && !!existingMap.sourcesContent[0];\n}\n\nfunction Combiner(file, sourceRoot) {\n  // since we include the original code in the map sourceRoot actually not needed\n  this.generator = createGenerator({ file: file || 'generated.js', sourceRoot: sourceRoot });\n}\n\nCombiner.prototype._addGeneratedMap = function (sourceFile, source, offset) {\n  this.generator.addGeneratedMappings(sourceFile, source, offset);\n  this.generator.addSourceContent(sourceFile, source);\n  return this;\n};\n\nCombiner.prototype._addExistingMap = function (sourceFile, source, existingMap, offset) {\n  var mappings = mappingsFromMap(existingMap);\n\n  // add all of the sources from the map\n  for (var i = 0, len = existingMap.sources.length; i < len; i++) {\n    if (!existingMap.sourcesContent) continue;\n\n    this.generator.addSourceContent(\n      rebaseRelativePath(sourceFile, existingMap.sourceRoot, existingMap.sources[i]),\n      existingMap.sourcesContent[i]);\n  }\n\n  // add the mappings, preserving the original mapping 'source'\n  mappings.forEach(function(mapping) {\n    // Add the mappings one at a time because 'inline-source-map' doesn't handle\n    // mapping source filenames. The mapping.source already takes sourceRoot into account\n    // per the SMConsumer.eachMapping function, so pass null for the root here.\n    this.generator.addMappings(\n      rebaseRelativePath(sourceFile, null, mapping.source), [mapping], offset);\n  }, this);\n\n  return this;\n};\n\n/**\n * Adds map to underlying source map.\n * If source contains a source map comment that has the source of the original file inlined it will offset these\n * mappings and include them.\n * If no source map comment is found or it has no source inlined, mappings for the file will be generated and included\n *\n * @name addMap\n * @function\n * @param opts {Object} { sourceFile: {String}, source: {String} }\n * @param offset {Object} { line: {Number}, column: {Number} }\n */\nCombiner.prototype.addFile = function (opts, offset) {\n\n  offset = offset || {};\n  if (!offset.hasOwnProperty('line'))  offset.line    =  0;\n  if (!offset.hasOwnProperty('column')) offset.column =  0;\n\n  var existingMap = resolveMap(opts.source);\n\n  return existingMap && hasInlinedSource(existingMap)\n    ? this._addExistingMap(opts.sourceFile, opts.source, existingMap, offset)\n    : this._addGeneratedMap(opts.sourceFile, opts.source, offset);\n};\n\n/**\n* @name base64\n* @function\n* @return {String} base64 encoded combined source map\n*/\nCombiner.prototype.base64 = function () {\n  return this.generator.base64Encode();\n};\n\n/**\n * @name comment\n * @function\n * @return {String} base64 encoded sourceMappingUrl comment of the combined source map\n */\nCombiner.prototype.comment = function () {\n  return this.generator.inlineMappingUrl();\n};\n\n/**\n * @name create\n * @function\n * @param file {String} optional name of the generated file\n * @param sourceRoot {String} optional sourceRoot of the map to be generated\n * @return {Object} Combiner instance to which source maps can be added and later combined\n */\nexports.create = function (file, sourceRoot) { return new Combiner(file, sourceRoot); };\n\n/**\n * @name removeComments\n * @function\n * @param src\n * @return {String} src with all sourceMappingUrl comments removed\n */\nexports.removeComments = function (src) {\n  if (!src.replace) return src;\n  return src.replace(convert.commentRegex, '').replace(convert.mapFileCommentRegex, '');\n};\n","map":{"mappings":[{"source":"node_modules/combine-source-map/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/combine-source-map/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}}],"sources":{"node_modules/combine-source-map/index.js":"'use strict';\n\nvar path            =  require('path');\nvar convert         =  require('convert-source-map');\nvar memoize         =  require('lodash.memoize');\nvar createGenerator =  require('inline-source-map');\nvar pathIsAbsolute  =  require('./lib/path-is-absolute');\nvar mappingsFromMap =  require('./lib/mappings-from-map');\n\nvar protocolRx = /^[a-z]+:\\/\\//;\n\n/**\n * Rebases a relative path in 'sourceFile' to be relative\n * to the path where 'sourceFile' is located.\n *\n * This is necessary before adding relative paths to the\n * new combined map to ensure all paths are relative to their\n * original source.\n *\n * The 'sourceRoot' from the original source map is joined\n * as well to ensure the complete path.\n *\n * Resulting paths that are absolute are passed along directly.\n *\n * @param sourceFile {String} path to the original source file that references a map\n * @param relativeRoot {String} sourceRoot in sourceFile's map to combine with relativePath\n * @param relativePath {String} source path from sourceFile's map\n */\nvar rebaseRelativePath = memoize(function(sourceFile, relativeRoot, relativePath) {\n  if (!relativePath) {\n    return relativePath;\n  }\n\n  // join relative path to root (e.g. 'src/' + 'file.js')\n  var relativeRootedPath = relativeRoot ? path.join(relativeRoot, relativePath) : relativePath;\n  relativeRootedPath = relativeRootedPath.replace(/\\\\/g, '/');\n  sourceFile = sourceFile.replace(/\\\\/g, '/');\n\n  if (sourceFile === relativeRootedPath ||    // same path,\n      pathIsAbsolute(relativeRootedPath) ||   // absolute path, nor\n      protocolRx.test(relativeRootedPath)) {  // absolute protocol need rebasing\n    return relativeRootedPath;\n  }\n\n  // make relative to source file\n  return path.join(path.dirname(sourceFile), relativeRootedPath).replace(/\\\\/g, '/');\n}, function(a, b, c) {\n  return a + '::' + b + '::' + c;\n});\n\nfunction resolveMap(source) {\n  var gen = convert.fromSource(source);\n  return gen ? gen.toObject() : null;\n}\n\nfunction hasInlinedSource(existingMap) {\n  return existingMap.sourcesContent && !!existingMap.sourcesContent[0];\n}\n\nfunction Combiner(file, sourceRoot) {\n  // since we include the original code in the map sourceRoot actually not needed\n  this.generator = createGenerator({ file: file || 'generated.js', sourceRoot: sourceRoot });\n}\n\nCombiner.prototype._addGeneratedMap = function (sourceFile, source, offset) {\n  this.generator.addGeneratedMappings(sourceFile, source, offset);\n  this.generator.addSourceContent(sourceFile, source);\n  return this;\n};\n\nCombiner.prototype._addExistingMap = function (sourceFile, source, existingMap, offset) {\n  var mappings = mappingsFromMap(existingMap);\n\n  // add all of the sources from the map\n  for (var i = 0, len = existingMap.sources.length; i < len; i++) {\n    if (!existingMap.sourcesContent) continue;\n\n    this.generator.addSourceContent(\n      rebaseRelativePath(sourceFile, existingMap.sourceRoot, existingMap.sources[i]),\n      existingMap.sourcesContent[i]);\n  }\n\n  // add the mappings, preserving the original mapping 'source'\n  mappings.forEach(function(mapping) {\n    // Add the mappings one at a time because 'inline-source-map' doesn't handle\n    // mapping source filenames. The mapping.source already takes sourceRoot into account\n    // per the SMConsumer.eachMapping function, so pass null for the root here.\n    this.generator.addMappings(\n      rebaseRelativePath(sourceFile, null, mapping.source), [mapping], offset);\n  }, this);\n\n  return this;\n};\n\n/**\n * Adds map to underlying source map.\n * If source contains a source map comment that has the source of the original file inlined it will offset these\n * mappings and include them.\n * If no source map comment is found or it has no source inlined, mappings for the file will be generated and included\n *\n * @name addMap\n * @function\n * @param opts {Object} { sourceFile: {String}, source: {String} }\n * @param offset {Object} { line: {Number}, column: {Number} }\n */\nCombiner.prototype.addFile = function (opts, offset) {\n\n  offset = offset || {};\n  if (!offset.hasOwnProperty('line'))  offset.line    =  0;\n  if (!offset.hasOwnProperty('column')) offset.column =  0;\n\n  var existingMap = resolveMap(opts.source);\n\n  return existingMap && hasInlinedSource(existingMap)\n    ? this._addExistingMap(opts.sourceFile, opts.source, existingMap, offset)\n    : this._addGeneratedMap(opts.sourceFile, opts.source, offset);\n};\n\n/**\n* @name base64\n* @function\n* @return {String} base64 encoded combined source map\n*/\nCombiner.prototype.base64 = function () {\n  return this.generator.base64Encode();\n};\n\n/**\n * @name comment\n * @function\n * @return {String} base64 encoded sourceMappingUrl comment of the combined source map\n */\nCombiner.prototype.comment = function () {\n  return this.generator.inlineMappingUrl();\n};\n\n/**\n * @name create\n * @function\n * @param file {String} optional name of the generated file\n * @param sourceRoot {String} optional sourceRoot of the map to be generated\n * @return {Object} Combiner instance to which source maps can be added and later combined\n */\nexports.create = function (file, sourceRoot) { return new Combiner(file, sourceRoot); };\n\n/**\n * @name removeComments\n * @function\n * @param src\n * @return {String} src with all sourceMappingUrl comments removed\n */\nexports.removeComments = function (src) {\n  if (!src.replace) return src;\n  return src.replace(convert.commentRegex, '').replace(convert.mapFileCommentRegex, '');\n};\n"},"lineCount":156}},"hash":"35000f86b4d5edb1ec62d00ea6107572","cacheData":{"env":{}}}