{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/utilise/package.json","includedInParent":true,"mtime":1523925102775},{"name":"./log","loc":{"line":1,"column":18}},{"name":"./client","loc":{"line":2,"column":21}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\nvar log = require('./log')('[perf]')\r\n  , client = require('./client')\r\n\r\nmodule.exports =  function perf(fn, msg) {\r\n  return function(){\r\n    /* istanbul ignore next */\r\n    var start  = client ? performance.now() : process.hrtime()\r\n      , retval = fn.apply(this, arguments)\r\n\r\n    retval instanceof Promise\r\n      ? retval.then(function(){ report(start) })\r\n      : report(start)\r\n\r\n    return retval\r\n  }\r\n\r\n  function report(start){\r\n    var diff = client ? performance.now() - start : process.hrtime(start)\r\n    if (!client) diff = (diff[0]*1e3 + diff[1]/1e6)\r\n    diff = Math.round(diff*100)/100\r\n    log(msg || fn.name, diff, 'ms')\r\n  }\r\n}","map":{"mappings":[{"source":"node_modules/utilise/perf.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/utilise/perf.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/utilise/perf.js":"var log = require('./log')('[perf]')\r\n  , client = require('./client')\r\n\r\nmodule.exports =  function perf(fn, msg) {\r\n  return function(){\r\n    /* istanbul ignore next */\r\n    var start  = client ? performance.now() : process.hrtime()\r\n      , retval = fn.apply(this, arguments)\r\n\r\n    retval instanceof Promise\r\n      ? retval.then(function(){ report(start) })\r\n      : report(start)\r\n\r\n    return retval\r\n  }\r\n\r\n  function report(start){\r\n    var diff = client ? performance.now() - start : process.hrtime(start)\r\n    if (!client) diff = (diff[0]*1e3 + diff[1]/1e6)\r\n    diff = Math.round(diff*100)/100\r\n    log(msg || fn.name, diff, 'ms')\r\n  }\r\n}"},"lineCount":24}},"hash":"2b33fec8ff606faa9a30970e17aba68c","cacheData":{"env":{}}}