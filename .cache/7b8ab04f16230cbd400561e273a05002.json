{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523842727247},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/rijs.components/package.json","includedInParent":true,"mtime":1523842713289},{"name":"utilise/log","loc":{"line":30,"column":20}},{"name":"utilise/client","loc":{"line":31,"column":23}},{"name":"utilise/ready","loc":{"line":32,"column":22}},{"name":"@compone/define","loc":{"line":33,"column":23}}],"generated":{"js":"module.exports = function components(ripple){\r\n  if (!client) return ripple\r\n  log('creating')\r\n\r\n  // if no render is defined on a component, load up definition\r\n  Node.prototype.render = function(){\r\n    const name = this.nodeName.toLowerCase()\r\n    if (name.includes('-')) \r\n      this.fn$ = this.fn$ || ripple\r\n        .subscribe(name)\r\n        .map(component => define(name, component))\r\n        // .until(new Promise(resolve => this.addEventListener('disconnected', () => {\r\n        //   if (!this.isConnected) resolve()\r\n        // })))\r\n  }\r\n  \r\n  // this is for backwards compatibility\r\n  Node.prototype.draw = function(){ \r\n    this.render() \r\n  }\r\n\r\n  ready(() => Array.from(document.querySelectorAll('*'))\r\n    .filter(d => d.nodeName.includes('-'))\r\n    .map(node => node.render())\r\n  )\r\n\r\n  return ripple\r\n}\r\n\r\nconst log = require('utilise/log')('[ri/components]')\r\n    , client = require('utilise/client')\r\n    , ready = require('utilise/ready')\r\n    , define = require('@compone/define')","map":{"mappings":[{"source":"node_modules/rijs.components/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rijs.components/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/rijs.components/index.js":"module.exports = function components(ripple){\r\n  if (!client) return ripple\r\n  log('creating')\r\n\r\n  // if no render is defined on a component, load up definition\r\n  Node.prototype.render = function(){\r\n    const name = this.nodeName.toLowerCase()\r\n    if (name.includes('-')) \r\n      this.fn$ = this.fn$ || ripple\r\n        .subscribe(name)\r\n        .map(component => define(name, component))\r\n        // .until(new Promise(resolve => this.addEventListener('disconnected', () => {\r\n        //   if (!this.isConnected) resolve()\r\n        // })))\r\n  }\r\n  \r\n  // this is for backwards compatibility\r\n  Node.prototype.draw = function(){ \r\n    this.render() \r\n  }\r\n\r\n  ready(() => Array.from(document.querySelectorAll('*'))\r\n    .filter(d => d.nodeName.includes('-'))\r\n    .map(node => node.render())\r\n  )\r\n\r\n  return ripple\r\n}\r\n\r\nconst log = require('utilise/log')('[ri/components]')\r\n    , client = require('utilise/client')\r\n    , ready = require('utilise/ready')\r\n    , define = require('@compone/define')"},"lineCount":33}},"hash":"1ec9013d2b386595c40629689579cdde","cacheData":{"env":{}}}