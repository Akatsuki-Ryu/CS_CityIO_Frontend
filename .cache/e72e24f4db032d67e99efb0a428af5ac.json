{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/underscore.string/package.json","includedInParent":true,"mtime":1523925102776}],"generated":{"js":"module.exports = function naturalCmp(str1, str2) {\n  if (str1 == str2) return 0;\n  if (!str1) return -1;\n  if (!str2) return 1;\n\n  var cmpRegex = /(\\.\\d+|\\d+|\\D+)/g,\n    tokens1 = String(str1).match(cmpRegex),\n    tokens2 = String(str2).match(cmpRegex),\n    count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i],\n      b = tokens2[i];\n\n    if (a !== b) {\n      var num1 = +a;\n      var num2 = +b;\n      if (num1 === num1 && num2 === num2) {\n        return num1 > num2 ? 1 : -1;\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  if (tokens1.length != tokens2.length)\n    return tokens1.length - tokens2.length;\n\n  return str1 < str2 ? -1 : 1;\n};\n","map":{"mappings":[{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/underscore.string/naturalCmp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/underscore.string/naturalCmp.js":"module.exports = function naturalCmp(str1, str2) {\n  if (str1 == str2) return 0;\n  if (!str1) return -1;\n  if (!str2) return 1;\n\n  var cmpRegex = /(\\.\\d+|\\d+|\\D+)/g,\n    tokens1 = String(str1).match(cmpRegex),\n    tokens2 = String(str2).match(cmpRegex),\n    count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i],\n      b = tokens2[i];\n\n    if (a !== b) {\n      var num1 = +a;\n      var num2 = +b;\n      if (num1 === num1 && num2 === num2) {\n        return num1 > num2 ? 1 : -1;\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  if (tokens1.length != tokens2.length)\n    return tokens1.length - tokens2.length;\n\n  return str1 < str2 ? -1 : 1;\n};\n"},"lineCount":30}},"hash":"245f7c78dda97416377a905b43cbacd8","cacheData":{"env":{}}}