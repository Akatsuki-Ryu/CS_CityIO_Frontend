{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/rijs.sessions/package.json","includedInParent":true,"mtime":1523925102775},{"name":"express-session","loc":{"line":17,"column":25}},{"name":"cookie-parser","loc":{"line":18,"column":24}},{"name":"utilise/client","loc":{"line":19,"column":23}},{"name":"utilise/noop","loc":{"line":20,"column":21}},{"name":"utilise/key","loc":{"line":21,"column":20}},{"name":"utilise/log","loc":{"line":22,"column":20}}],"generated":{"js":"// -------------------------------------------\r\n// Populates sessionID on each connection\r\n// -------------------------------------------\r\nmodule.exports = function(ripple, { session } = {}){\r\n  log('creating')\r\n  if (!session || !ripple.server) return ripple\r\n\r\n  ripple.server.express\r\n    .use(cookies(session.secret))\r\n    .use(sessions(session))\r\n\r\n  ripple.server.ws\r\n    .on('connection', auth(session))\r\n  return ripple\r\n}\r\n\r\nconst sessions = require('express-session')\r\n    , cookies = require('cookie-parser')\r\n    , client = require('utilise/client')\r\n    , noop = require('utilise/noop')\r\n    , key = require('utilise/key')\r\n    , log = require('utilise/log')('[ri/sessions]')\r\n    , auth = ({ secret, name }) => socket => {\r\n        const req = {}\r\n        key('headers.cookie', socket.upgradeReq.headers.cookie)(req)\r\n        cookies(secret)(req, null, noop)\r\n        socket.sessionID = req.signedCookies[name] || req.cookies[name]\r\n      }","map":{"mappings":[{"source":"node_modules/rijs.sessions/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rijs.sessions/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/rijs.sessions/index.js":"// -------------------------------------------\r\n// Populates sessionID on each connection\r\n// -------------------------------------------\r\nmodule.exports = function(ripple, { session } = {}){\r\n  log('creating')\r\n  if (!session || !ripple.server) return ripple\r\n\r\n  ripple.server.express\r\n    .use(cookies(session.secret))\r\n    .use(sessions(session))\r\n\r\n  ripple.server.ws\r\n    .on('connection', auth(session))\r\n  return ripple\r\n}\r\n\r\nconst sessions = require('express-session')\r\n    , cookies = require('cookie-parser')\r\n    , client = require('utilise/client')\r\n    , noop = require('utilise/noop')\r\n    , key = require('utilise/key')\r\n    , log = require('utilise/log')('[ri/sessions]')\r\n    , auth = ({ secret, name }) => socket => {\r\n        const req = {}\r\n        key('headers.cookie', socket.upgradeReq.headers.cookie)(req)\r\n        cookies(secret)(req, null, noop)\r\n        socket.sessionID = req.signedCookies[name] || req.cookies[name]\r\n      }"},"lineCount":28}},"hash":"9cf15537ad7cb45fd68371e9f0f3ef32","cacheData":{"env":{}}}