{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523925118628},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/rijs.serve/package.json","includedInParent":true,"mtime":1523925102766},{"name":"compression","loc":{"line":23,"column":28}},{"name":"utilise/send","loc":{"line":24,"column":21}},{"name":"utilise/key","loc":{"line":25,"column":20}},{"name":"path","loc":{"line":26,"column":28}},{"name":"express","loc":{"line":27,"column":24}},{"name":"utilise/log","loc":{"line":28,"column":20}}],"generated":{"js":"// -------------------------------------------\r\n// Serves the client library /ripple.js\r\n// -------------------------------------------\r\nmodule.exports = function serve(ripple, { server, serve, client = 'ripple' } = {}){\r\n  log('creating')\r\n  const { http = server } = ripple.server || {}\r\n  if (!http) return ripple\r\n  const app  = expressify(http)\r\n      , path = local(serve, client)\r\n      , compress = compression()\r\n\r\n  app.use(`/${client}.js`, compress, send(path('bundle.js')))\r\n  app.use(`/${client}.min.js`, compress, send(path('min.js')))\r\n  return ripple\r\n}\r\n\r\nconst expressify = server => server.express\r\n  || key('_events.request')(server) \r\n  || server.on('request', express())._events.request\r\n\r\nconst local = (path, client) => ext => resolve(path, `./${client}.${ext}`)\r\n\r\nconst compression = require('compression')\r\n    , send = require('utilise/send')\r\n    , key = require('utilise/key')\r\n    , { resolve } = require('path')\r\n    , express = require('express')\r\n    , log = require('utilise/log')('[ri/serve]')","map":{"mappings":[{"source":"node_modules/rijs.serve/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rijs.serve/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/rijs.serve/index.js":"// -------------------------------------------\r\n// Serves the client library /ripple.js\r\n// -------------------------------------------\r\nmodule.exports = function serve(ripple, { server, serve, client = 'ripple' } = {}){\r\n  log('creating')\r\n  const { http = server } = ripple.server || {}\r\n  if (!http) return ripple\r\n  const app  = expressify(http)\r\n      , path = local(serve, client)\r\n      , compress = compression()\r\n\r\n  app.use(`/${client}.js`, compress, send(path('bundle.js')))\r\n  app.use(`/${client}.min.js`, compress, send(path('min.js')))\r\n  return ripple\r\n}\r\n\r\nconst expressify = server => server.express\r\n  || key('_events.request')(server) \r\n  || server.on('request', express())._events.request\r\n\r\nconst local = (path, client) => ext => resolve(path, `./${client}.${ext}`)\r\n\r\nconst compression = require('compression')\r\n    , send = require('utilise/send')\r\n    , key = require('utilise/key')\r\n    , { resolve } = require('path')\r\n    , express = require('express')\r\n    , log = require('utilise/log')('[ri/serve]')"},"lineCount":28}},"hash":"a911d30df35bb8987a36c6e3eab380a0","cacheData":{"env":{}}}