{"dependencies":[{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/package.json","includedInParent":true,"mtime":1523842727247},{"name":"/Volumes/WORK/GIT/17_CS_cityIO_Frontend/node_modules/underscore.string/package.json","includedInParent":true,"mtime":1523842713290},{"name":"./makeString","loc":{"line":1,"column":25}}],"generated":{"js":"var makeString = require('./makeString');\n\nmodule.exports = function adjacent(str, direction) {\n  str = makeString(str);\n  if (str.length === 0) {\n    return '';\n  }\n  return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length - 1) + direction);\n};\n","map":{"mappings":[{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/underscore.string/helper/adjacent.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}}],"sources":{"node_modules/underscore.string/helper/adjacent.js":"var makeString = require('./makeString');\n\nmodule.exports = function adjacent(str, direction) {\n  str = makeString(str);\n  if (str.length === 0) {\n    return '';\n  }\n  return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length - 1) + direction);\n};\n"},"lineCount":10}},"hash":"dc7a47f9088a2833ad12dfca3ba5167f","cacheData":{"env":{}}}